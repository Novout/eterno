name: Eterno build and release

on:
  push:
    tags:
      - v*.*.*

permissions:
  contents: write
  packages: write
  issues: write

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493 # v5.0.0
      - name: Install pnpm
        uses: pnpm/action-setup@f2b2b233b538f500472c7274c7012f57857d8ce0 # v4.1.0
        with:
          version: 10

      - name: Install Node.js
        uses: actions/setup-node@d7a11313b581b306c961b506cfc8971208bb03f6 # v4.4.0
        with:
          node-version: 24
          cache: 'pnpm'

      - name: 'Env file'
        run: |
          touch .env
          echo VITE_SENTRY_URL=${{ env.VITE_SENTRY_URL }} >> .env
          cat .env

      - name: Install Dependencies
        run: pnpm install

      - name: build-linux
        if: matrix.os == 'ubuntu-latest'
        run: pnpm run build:linux

      - name: build-mac
        if: matrix.os == 'macos-latest'
        run: pnpm run build:mac

      - name: build-win
        if: matrix.os == 'windows-latest'
        run: pnpm run build:win
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: release
        uses: softprops/action-gh-release@fbadcc90e88ecface60a0a0d123795b784ceb239 # v2.3.2
        with:
          draft: true
          files: |
            dist/*.exe
            dist/*.zip
            dist/*.dmg
            dist/*.AppImage
            dist/*.snap
            dist/*.deb
            dist/*.rpm
            dist/*.tar.gz
            dist/*.yml
            dist/*.blockmap
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
